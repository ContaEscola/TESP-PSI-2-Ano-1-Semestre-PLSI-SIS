/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Aerocontrol;

import org.eclipse.paho.client.mqttv3.IMqttDeliveryToken;
import org.eclipse.paho.client.mqttv3.MqttCallback;
import org.eclipse.paho.client.mqttv3.MqttClient;
import org.eclipse.paho.client.mqttv3.MqttException;
import org.eclipse.paho.client.mqttv3.MqttMessage;

/**
 *
 * @author rafae
 */
public class Aerocontrol extends javax.swing.JDialog {

    MqttClient client;
    /**
     * Creates new form Aerocontrol
     */
    public Aerocontrol(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initConnection();
        subscribeDefaultChannel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        TF_Messages_Tickets = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        TF_Sub = new javax.swing.JTextField();
        BT_Sub = new javax.swing.JButton();
        BT_Remove = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TF_Messages = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        TF_Messages_Tickets.setColumns(20);
        TF_Messages_Tickets.setRows(5);
        TF_Messages_Tickets.setEnabled(false);
        jScrollPane2.setViewportView(TF_Messages_Tickets);

        jLabel2.setText("Subscrever");

        BT_Sub.setText("Subscrever");
        BT_Sub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_SubActionPerformed(evt);
            }
        });

        BT_Remove.setText("Cancelar Subscrição");
        BT_Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_RemoveActionPerformed(evt);
            }
        });

        TF_Messages.setColumns(20);
        TF_Messages.setRows(5);
        TF_Messages.setEnabled(false);
        jScrollPane1.setViewportView(TF_Messages);

        jLabel3.setText("Novos Tickets");

        jLabel4.setText("Tickets  de Suporte Subscritos");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Aerocontrol/logo-pc.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(TF_Sub, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BT_Sub, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BT_Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel4))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(BT_Remove))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TF_Sub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BT_Sub))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initConnection(){
        try{
                     client = new MqttClient("tcp://localhost:1883", MqttClient.generateClientId(), null);
                     client.setCallback(new MqttCallback() {
                     @Override
                     public void messageArrived(String topic, MqttMessage msg) throws Exception {
                            String messageBody = new String(msg.getPayload());
                            if (topic.equals("tickets")) {
                                 TF_Messages.append(messageBody + "\r\n");
                            } else{
                                TF_Messages_Tickets.append(messageBody + "\r\n");
                            }
                     }
                     @Override
                     public void deliveryComplete(IMqttDeliveryToken token) {
                                 // Nunca são enviadas Mensagens
                     }
                     @Override
                     public void connectionLost(Throwable exception) {
                                 TF_Messages.append("Perdeu a ligação.\r\n");
                     }
                     });
                     client.connect();
                     TF_Messages.append("Conectado\r\n");
             }
             catch(MqttException ex)
             {
                     TF_Messages.append("Impossível ligar ao Mosquitto\r\n");
             }
    }

    private void subscribeDefaultChannel() {
        try {
            int subQoS= 0;

            client.subscribe("tickets", subQoS);
        } catch (Exception e) {
            TF_Messages.append("Impossível Subscrever  o canal de tickets.\r\n");
        }
    }
    
    private void BT_SubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_SubActionPerformed
        try {
            String topico = TF_Sub.getText();
            int subQoS= 0;

            client.subscribe(topico, subQoS);
            TF_Messages_Tickets.append("Subscreveu o canal " + topico + "\r\n");
        } catch (Exception e) {
            TF_Messages_Tickets.append("Impossível Subscrever\r\n");
        }
    }//GEN-LAST:event_BT_SubActionPerformed

    private void BT_RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_RemoveActionPerformed
        try {
            String[] arrTopicos = new String[1];
            arrTopicos[0] = TF_Sub.getText();
            client.unsubscribe(arrTopicos);
            TF_Messages_Tickets.append("Removeu subescrição " + arrTopicos[0] + "\r\n");
        } catch (Exception e) {
            TF_Messages_Tickets.append("Impossível remover subscrição\r\n");
        }
    }//GEN-LAST:event_BT_RemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Aerocontrol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Aerocontrol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Aerocontrol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Aerocontrol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Aerocontrol dialog = new Aerocontrol(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_Remove;
    private javax.swing.JButton BT_Sub;
    private javax.swing.JTextArea TF_Messages;
    private javax.swing.JTextArea TF_Messages_Tickets;
    private javax.swing.JTextField TF_Sub;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
